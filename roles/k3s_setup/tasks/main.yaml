---
- name: Define workspace directory (for Jenkins)
  set_fact:
    workspace_dir: "{{ lookup('env', 'WORKSPACE') | default('/var/lib/jenkins/workspace') }}"

- name: Retrieve K3s Token from Master
  command: cat /var/lib/rancher/k3s/server/node-token
  register: k3s_token
  changed_when: false
  when: inventory_hostname == "k3smaster"

- name: Store K3s Token in Jenkins Workspace
  copy:
    content: "{{ k3s_token.stdout }}"
    dest: "{{ workspace_dir }}/k3s_token"
    mode: '0644'
  when: inventory_hostname == "k3smaster"

- name: Fetch K3s Token from Master on Worker Nodes
  command: cat "{{ workspace_dir }}/k3s_token"
  register: k3s_token
  changed_when: false
  delegate_to: k3smaster
  when: inventory_hostname in groups['k3snodes']

- name: Debug K3s Token on Worker Nodes
  debug:
    msg: "Worker node received K3s token: {{ k3s_token.stdout | default('MISSING') }}"

- name: Install Required Dependencies
  package:
    name:
      - curl
      - iptables
      - socat
      - conntrack
      - firewalld
    state: present

- name: Disable Swap Temporarily
  command: swapoff -a
  changed_when: false

- name: Disable Swap Permanently
  lineinfile:
    path: /etc/fstab
    regexp: '.*swap.*'
    state: absent

- name: Install K3s on Master
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --node-ip={{ ansible_default_ipv4.address }} --tls-san={{ ansible_default_ipv4.address }}" sh -
  args:
    executable: /bin/bash
  when: inventory_hostname == "k3smaster"

- name: Ensure K3s Service is Running (Master)
  systemd:
    name: k3s
    enabled: yes
    state: started
  when: inventory_hostname == "k3smaster"

- name: Install K3s Agent on Worker Nodes
  shell: |
    curl -sfL https://get.k3s.io | K3S_URL="https://{{ hostvars['k3smaster']['ansible_host'] }}:6443" K3S_TOKEN="$(cat {{ workspace_dir }}/k3s_token)" sh -
  args:
    executable: /bin/bash
  when: inventory_hostname in groups['k3snodes']

- name: Ensure K3s Agent Service is Running (Workers)
  systemd:
    name: k3s-agent
    enabled: yes
    state: started
  when: inventory_hostname in groups['k3snodes']

- name: Deploy MetalLB on Master
  shell: |
    k3s kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.7/config/manifests/metallb-native.yaml
  args:
    executable: /bin/bash
  when: inventory_hostname == "k3smaster"

- name: Wait for MetalLB Pods to be Running
  shell: |
    k3s kubectl get pods -n metallb-system
  register: metallb_status
  until: "'Running' in metallb_status.stdout"
  retries: 10
  delay: 10
  when: inventory_hostname == "k3smaster"

- name: Generate MetalLB ConfigMap File
  copy:
    dest: "{{ workspace_dir }}/metallb-config.yaml"
    content: |
      apiVersion: v1
      kind: ConfigMap
      metadata:
        namespace: metallb-system
        name: config
      data:
        config: |
          address-pools:
          - name: default
            protocol: layer2
            addresses:
            - 192.168.1.100-192.168.1.200
  when: inventory_hostname == "k3smaster"

- name: Apply MetalLB ConfigMap
  command: k3s kubectl apply -f "{{ workspace_dir }}/metallb-config.yaml"
  when: inventory_hostname == "k3smaster"

- name: Restart K3s
  systemd:
    name: k3s
    state: restarted
  when: inventory_hostname == "k3smaster"
