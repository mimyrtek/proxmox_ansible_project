---
- name: Debug - Print Jenkins User and Workspace Directory
  debug:
    msg:
      - "Running as user: {{ ansible_env.USER }}"
      - "Jenkins workspace directory: {{ ansible_env.HOME }}/workspace/Install_kubernetes"

- name: Ensure Required Dependencies are Installed
  package:
    name:
      - curl
      - iptables
      - socat
      - conntrack
      - firewalld
    state: present

- name: Disable Swap Temporarily
  command: swapoff -a
  when: inventory_hostname in groups['k3smaster'] + groups['k3snodes']

- name: Disable Swap Permanently
  lineinfile:
    path: /etc/fstab
    regexp: 'swap'
    state: absent

### =============================
###  INSTALL K3S ON MASTER NODE
### =============================

- name: Install K3s on Master Node
  shell: |
    curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --node-ip={{ ansible_default_ipv4.address }} --tls-san={{ ansible_default_ipv4.address }}" sh -
  when: inventory_hostname in groups['k3smaster']

- name: Ensure K3s Service is Running on Master
  systemd:
    name: k3s
    state: started
    enabled: yes
  when: inventory_hostname in groups['k3smaster']

- name: Retrieve K3s Token from Master
  shell: "cat /var/lib/rancher/k3s/server/node-token"
  register: k3s_token
  changed_when: false
  when: inventory_hostname in groups['k3smaster']

- name: Debug - Show Retrieved K3s Token from Master
  debug:
    msg: "K3s token on master: {{ k3s_token.stdout }}"
  when: inventory_hostname in groups['k3smaster']

- name: Save K3s Token to Jenkins Workspace
  copy:
    content: "{{ k3s_token.stdout }}"
    dest: "{{ ansible_env.HOME }}/workspace/Install_kubernetes/k3s_token"
  when: inventory_hostname in groups['k3smaster']

- name: Debug - Confirm K3s Token File on Jenkins Server
  stat:
    path: "{{ ansible_env.HOME }}/workspace/Install_kubernetes/k3s_token"
  register: token_stat
  when: inventory_hostname in groups['k3smaster']

- name: Debug - Token File Exists?
  debug:
    msg: "K3s token file exists: {{ token_stat.stat.exists }}"
  when: inventory_hostname in groups['k3smaster']

### =============================
###  TRANSFER K3S TOKEN TO WORKER NODES
### =============================

- name: Fetch K3s Token from Master to Jenkins
  fetch:
    src: "{{ ansible_env.HOME }}/workspace/Install_kubernetes/k3s_token"
    dest: "/tmp/k3s_token"
    flat: yes
  when: inventory_hostname in groups['k3smaster']

- name: Debug - Show Token Retrieved by Jenkins
  debug:
    msg: "Jenkins retrieved K3s token: {{ lookup('file', '/tmp/k3s_token') }}"
  run_once: true
  delegate_to: localhost

- name: Distribute K3s Token to Worker Nodes
  copy:
    src: "/tmp/k3s_token"
    dest: "/var/lib/rancher/k3s/server/node-token"
    owner: root
    group: root
    mode: "0600"
  when: inventory_hostname in groups['k3snodes']

- name: Debug - Confirm Token Presence on Worker Nodes
  stat:
    path: "/var/lib/rancher/k3s/server/node-token"
  register: worker_token_stat
  when: inventory_hostname in groups['k3snodes']

- name: Debug - Worker Node Token File Exists?
  debug:
    msg: "Worker node {{ inventory_hostname }} has K3s token: {{ worker_token_stat.stat.exists }}"
  when: inventory_hostname in groups['k3snodes']

### =============================
###  INSTALL K3S ON WORKER NODES
### =============================

- name: Install K3s on Worker Nodes
  shell: |
    curl -sfL https://get.k3s.io | K3S_URL="https://{{ groups['k3smaster'][0] }}:6443" K3S_TOKEN="$(cat /var/lib/rancher/k3s/server/node-token)" sh -
  when: inventory_hostname in groups['k3snodes']

- name: Ensure K3s Service is Running on Workers
  systemd:
    name: k3s
    state: started
    enabled: yes
  when: inventory_hostname in groups['k3snodes']

- name: Debug - K3s Node Installation Complete
  debug:
    msg: "K3s installation complete on node: {{ inventory_hostname }}"
