---
- name: Install pip3
  package:
    name: python3-pip
    state: present

- name: Install Kubernetes Python package using APT
  apt:
    name: python3-kubernetes
    state: present

- name: Create the MetalLB namespace
  kubernetes.core.k8s:
    name: metallb-system
    api_version: v1
    kind: Namespace
    state: present
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"

- name: Install MetalLB manifest
  kubernetes.core.k8s:
    state: present
    src: "https://raw.githubusercontent.com/metallb/metallb/v0.13.11/config/manifests/metallb-native.yaml"
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"

- name: Apply MetalLB ConfigMap
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'metallb-configmap.yaml.j2') }}"
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"

- name: Wait for MetalLB pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: metallb-system
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
  register: result
  until: result.resources is defined and (result.resources | selectattr('status.phase', 'equalto', 'Running') | list | length) >= 2
  retries: 30
  delay: 10


#[-----------------------------------------]
# - name: Deploy hello-world app using MetalLB
#   kubernetes.core.k8s:
#     state: present
#     kubeconfig: "/etc/rancher/k3s/k3s.yaml"
#     definition:
#       apiVersion: apps/v1
#       kind: Deployment
#       metadata:
#         name: hello-world
#         namespace: default
#         labels:
#           app: hello-world
#       spec:
#         replicas: 1
#         selector:
#           matchLabels:
#             app: hello-world
#         template:
#           metadata:
#             labels:
#               app: hello-world
#           spec:
#             containers:
#             - name: hello-world
#               image: mimyrtek/hello-world:latest
#               ports:
#               - containerPort: 5000

# - name: Expose hello-world service using MetalLB
#   kubernetes.core.k8s:
#     state: present
#     kubeconfig: "/etc/rancher/k3s/k3s.yaml"
#     definition:
#       apiVersion: v1
#       kind: Service
#       metadata:
#         name: hello-world-service
#         namespace: default
#       spec:
#         selector:
#           app: hello-world
#         ports:
#         - protocol: TCP
#           port: 80
#           targetPort: 5000
#         type: LoadBalancer
#         loadBalancerIP: 10.10.50.200
# apiVersion: metallb.io/v1beta1
# kind: IPAddressPool
# metadata:
#   name: default
#   namespace: metallb-system
# spec:
#   addresses:
#     - 10.10.50.150-10.10.50.200
# ---
# apiVersion: metallb.io/v1beta1
# kind: L2Advertisement
# metadata:
#   name: default
#   namespace: metallb-system

- name: Create MetalLB IPAddressPool
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    definition:
      apiVersion: metallb.io/v1beta1
      kind: IPAddressPool
      metadata:
        name: default-pool
        namespace: metallb-system
      spec:
        addresses:
          - 10.10.50.155-10.10.50.160

- name: Create MetalLB L2Advertisement
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    definition:
      apiVersion: metallb.io/v1beta1
      kind: L2Advertisement
      metadata:
        name: l2-adv
        namespace: metallb-system

- name: Deploy hello-world app using MetalLB
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: hello-world
        namespace: default
        labels:
          app: hello-world
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: hello-world
        template:
          metadata:
            labels:
              app: hello-world
          spec:
            containers:
            - name: hello-world
              image: mimyrtek/hello-world:latest
              ports:
              - containerPort: 5000

- name: Expose hello-world service using MetalLB
  kubernetes.core.k8s:
    state: present
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: hello-world-service
        namespace: default
      spec:
        selector:
          app: hello-world
        ports:
        - protocol: TCP
          port: 80
          targetPort: 5000
        type: LoadBalancer
        loadBalancerIP: 10.10.50.155
